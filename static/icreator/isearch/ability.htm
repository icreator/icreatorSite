<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Система осмысленного, умного, смыслового поиска текстовой информации. Возможности.</TITLE>
<META NAME="keywords" CONTENT="осмысленный умный смысловой поиск информации">
<META NAME="description" CONTENT="осмысленный умный смысловой поиск текстовой информации - Система умного поиска информации">
</HEAD>
<BODY BGCOLOR="#a6c8c7">

<FONT FACE="Times New Roman" SIZE=4><P>Система умного, смыслового поиска текстовой информации.</P>
</FONT><FONT FACE="Times New Roman"><P>Возможности и развитие</P>
Здесь описывается моя Система осмысленного, умного, смыслового поиска текстовой информации - это программа для компьютера - далее Система.
<OL>
<!--begin of Top100-->
<a href="http://top100.rambler.ru/top100/"><img src="http://counter.rambler.ru/top100.cnt?363068" alt="Rambler's Top100" width=1 height=1 border=0></a>
<!--end of Top100 code-->
16.04.2004: <A HREF="progress.htm"><U><FONT COLOR="#0000ff">Текущее развитие и состояние дел</U></FONT></A> (новое)<BR><BR>

<B><LI>Краткое описание поставленной задачи</LI>
</B><DL>
<DD>Система должна отвечать на запросы пользователя так же как бы ответил другой человек, который знает нужную пользователю информацию. Поэтому в Системе нет таких понятий и механизмов как “релевантность”, потому что релевантность не дает смысла, а дает лишь возможное совпадение смыслов, что выглядит как “гадание на кофейной гуще”. Моя Система должна, на основе механизма, алгоритма смыслового поиска информации, выполнять целые алгоритмы работы с информацией. Такая работа называется Data-Mining – раскопка знаний (OLAP-технологии). В этой связи Система превращается в подобие умного языка программирования и работает как интерпретатор. Данные и результаты смысловых запросов передаются в этом случае через переменные, которые довольно сложным образом обслуживаются Системой. Естественно, логические операции “не”, “или” выполняются так же как бы сделал человек. Пример: “кто продает автомашину, иностранного производства, без пробега по России”. Здесь “без” имеет логическую нагрузку как и “не”. Поэтому, информация, где есть смысл, что машина прошла хоть сколько по России уже не будет выдана пользователю. А часть запроса “иностранного производства” будет понято как и любым человеком – это “не сделано в стране Россия”. Опять же “сделано” будет понято Системой как “произведено”, “выпущено”, и так далее… , в общем, все что бы подумал человек.</DD>
<DD>Пример смыслового поиска информации. Система знает: “Принтер марки НР1200 имеет характеристики: лазерный, разрешение печати 1200 на 600, черно-белый”. “Фирма “ОПИ” продает притер марки НР1200”. Пользователь дает Системе запрос: “кто продает лазерный принтер с разрешением 1200 на 600?”. Система обработав смыслы, выдает: “фирма “ОПИ” продает принтер марки НР1200 лазерный с разрешением 1200 на 600”.</DD>
</DL>
<B><LI>Текущие возможности Системы</LI>
<OL>

</B><LI>Система разбирает сложноподчиненные предложения, превращая их во внутренние смыслы (знания). Возможно использование списков, местоимений типа "который", "он". Например, "в сарае водились мыши. Они любили грызть сыр". Здесь Система "понимает" что "они" это "мыши". В списках пока не работают союзы "и", "или". Особо сложные и разговорные предложения Система может не понимать. Скорость разбора превышает в несколько десятков раз скорость чтения и ПОНИМАНИЯ человеком.</FONT> <FONT FACE="Times New Roman">Результатом разбора текста является структура узел-связь. Здесь надо заметить, что "понимание" Системой текста - есть перевод его последовательного представления из слов человеческого естественного языка во внутреннюю структуру смыслов-связей.</LI>
<LI>Система запоминает полученные знания (смыслы) в базе знаний.</LI>
<LI>Система осуществляет поиск знаний, смыслов. Например, введена информация (знание) в систему "в доме, который стоял на берегу моря, жили туристы" - Система преобразует текст в структуру смыслов-связей и запомнит в своей базе знаний. Теперь, если задан запрос: "стоял дом, в котором жили туристы" найдет ранее введенное предложение. При нахождении выдает всю найденную структуру. Поиск производится по индексам, поэтому скорость поиска очень высокая. Такой поиск я называю "поиск локальных смыслов (знаний)". Это значит, что извне не поступает информации или смыслов для иной обработки или поиска информации. То есть что спросили, то и ищем.</LI>
<LI>Вывод знаний, информации на упрощенном естественном языке. Упрощенный язык – язык на котором правила связывания слов не зависят от самих слов, а определяются простым набором правил. Это наподобие правил математического языка. В дальнейшем будет сделан синтез смыслов-структур в настоящий естественный язык.</LI></OL>

</FONT><P>&nbsp;</P>
<B><FONT FACE="Times New Roman"><LI>Примеры возможностей.</LI>
</B><P>Вот варианты некоторых успешно разбираемых предложений:</P>
<B><I><P>снег покрыл ровный лёд. лёд ровный покрыл снег. снег ровный покрыл лёд<BR>
</B></I>Здесь сложность в том кто кого "порыл" и к чему относится "ровный". При такой многозначности система берет всегда первое за главное, потому как они оба могут быть главными. А в русском языке будет первое главное. Определение относится здесь всегда к ближнему слову (имеется ввиду что оно может принадлежать обоим существительным)</P>
<B><I><P>солнечный зайчик на осенний прыгнул лист. солнечный зайчик прыгнул на</I></FONT><BR>
<I><FONT FACE="Times New Roman">осенний лист. солнечный зайчик на осенний лист прыгнул.<BR>
</B></I>Результат разбора этих предложений полностью идентичен по смыслу. То есть результатом будет одинаковые структуры смыслов-связей.</P>
<B><I><P>скоро русский интернет ожидает волна новых успехов. </P>
</B></I><P>Здесь Система определит главное слово в первом предложении "волна".<BR>
<BR>
<B><I>очень красивая девушка шла слишком быстро.<BR>
</B></I>Здесь "очень" и "слишком" можно переставлять местами как угодно, при этом может поменяться смысл предложения. Система всегда правильно этот смысл "поймет", то есть правильно создаст структуру смысл-связь.</P>
<B><I><P>новый проект старого закона нового президента первого созыва нашего общества<BR>
открывает новые границы нашего бизнеса<BR>
</B></I>Местоимения "нашего" пока не понимает как местоимения, то есть не делает внешних ссылок для них.<BR>
<BR>
<B><I>в доме, в котором жил кот, который любил молоко, которое давала корова,<BR>
которая жила в сарае, в котором жили крысы, водились мыши. они любили грызть<BR>
сыр в кладовке.<BR>
</B></I>Здесь надо заметить, что система понимает что "они" это "мыши", и "в<BR>
доме водились мыши". Все местоимения "который" понимает как местоимения и связывает их корректно.<BR>
<BR>
<B><I>дом, в котором мы жили, стоял на берегу моря. мы жили в доме, который стоял<BR>
на берегу моря. на берегу моря, у которого мы жили, стоял дом. </P>
</B></I><P>Разбор первых двух предложений создает одинаковую структуру смысл-связь, так как они(предложения) по смыслу идентичны. Третье предложение немного отличается по смыслу: “мы жили у моря”, а не “мы жили в доме”.<BR>
<BR>
<B><I>в линейном усилителе мощности, который содержит первый транзистор, первую,<BR>
вторую клеммы для подключения входного сигнала, первый источник тока, второй<BR>
транзистор, база которого подключена к общей точке последовательного<BR>
соединения первого переменного резистора, второго резистора, есть новый<BR>
блок.<BR>
</B></I>Пример из заявки на патент - формула патента, но не вся. Этот отрывок успешно "понимается" Системой. Вся формула достаточно сложная и Система не может "осмыслить"(преобразовать) ее целиком. </P>
</FONT><P><BR>
<B><I><FONT FACE="Times New Roman">в комнате стояли стол, стул и комод<BR>
<BR>
на полу, на столе прыгали, на стуле, на окне скакали красный, зеленый, синий<BR>
шары<BR>
</B></I>Здесь корректно обрабатываются списки, так что Система понимает, например, </P>
<P>что "красный шар прыгал на полу и скакал на окне". Или что "на полу прыгали шары"</P>
<B><LI>Смысловой поиск информации или выполнение смысловых запросов</LI>
</B><P>После того, как Система запомнила некую информацию, ее всегда можно найти, задав запрос. Запросы так же понимаются Системой как и вводимая информация. Запрос – это текст на естественном языке.</P>
<B><LI>Развитие системы в ближайшее время.</LI>
<OL>

</B><LI>Использование местоимений-вопросов в тексте запроса для получения информации нужного типа. Например, "какие фирмы продают автомобили?" и "где фирмы продают автомобили?" - будут отличаться по результату выдачи информации.</LI>
<LI>Уровень развернутости информации. Выдача ответов с разной глубиной связей. Например, ответ с развернутостью 1: "фирмы продают автомобили в городах", ответ с развернутостью 2: "... в городах Москва, Петербург,...". Это лишь примерный вариант работы.</LI>
<LI>Использование значений переменных с именами. Например, для решения алгебраических задач.</LI>
<LI>Использование внешних знаний при разборе текста. Например, "девушка пошла на речку. Она долго в ней купалась". Зная что "девушка может купаться", а "в речке можно купаться" система правильно свяжет местоимения "она" и "ней".</LI>
<LI>Использование системой внешних смыслов, знаний. Например, в системе есть информация "стул деревянный". Системе задается найти "что состоит из дерева?". Система, используя внешнее знание, найдет "стул деревянный". Например, есть знания "автомобиль марки "Жигули" есть российский автомобиль". Пользователь дает запрос "куплю автомашину российского производства". В базе же текущей информации есть объявление "продаю "Жигули". Система найдет последнее объявление, используя внешние знания.</LI>
<LI>Вывод информации (синтез) на естественном языке, согласно правилам языка (русский, английский или другой).</LI>
<LI>Самостоятельное создание системой внешних знаний. На основе имеющейся информации Система будет сама обучаться, создавая новые правила-знания.</LI>
<LI>Использование логических связей-слов "не", "или", "больше"... Сейчас реализовано не полностью.</LI>
<LI>Создание набора функций языка управления информацией. Так из Системы получится язык программирования нового поколения.</LI></OL>

<B><LI>Применение системы</LI>
<OL>

</B><LI>Как поисковой машины.</LI>
<P>Всем известно, что современные поисковые системы вообще игнорируют смысл при поиске, выдавая зачастую полную ерунду. Или не выдавая нужного, пропуская его только потому, что нет совпадения символов. Моя Система, наоборот – ищет смысл.</P>
<LI>Как усилитель интеллекта. </LI>
<P>Система ищет информацию с использованием внешних знаний, правил. Точно так же человек ищет решение поставленной задачи, например изобретая что-то или принимая решение. Конечно, методы использующиеся в Системе довольно просты и не охватывают весь спектр методов, используемых человеком. Но даже эти базовые методы дают неплохие результаты помогая человеку.</P>
<LI>Как интеллектуальный переводчик. </LI>
<P>Чтобы проверить корректность перевода любого переводчика я задаю ей запрос на одном языке, чтобы она перевела на другой, а затем делаю обратный перевод полученного текста. По идее, обратный перевод должен совпасть по СМЫСЛУ с первоначальным.</P>
<P>Я тут недавно набрел на перевод с помощью "интеллектуального" переводчика. Предлагалось попробовать перевести что-нибудь. Ну я и ввел: "Девушка пошла на речку. Она в ней долго купалась". Было переведено: "The girl has gone on речку. She(it) in it(her) long bathed". Я отредактировал сам в следующее: "The girl has gone on речку. She in it long bathed". Был обратный перевод: "Девочка продолжила речку. Она в этом долго купалась". Ну куда это годится, скажите мне!</P>
<P>Замечу, что это еще очень хороший перевод для машины - есть примеры и поужасней.<BR>
У моей Системы таких ошибок нет, потому что, Система строит структуры смыслов, а затем можно синтезировать их в любой язык. Следовательно, СМЫСЛ синтезированного текста будет одинаковый. Поэтому на базе Системы должен получиться интеллектуальный машинный перевод.</P>
<LI>Как язык программирования нового поколения.</LI>
<P>В этом случае, как бы программисты и не нужны будут - Система будет общаться с человеком на естественном языке и делать то, что ее попросят. Конечно, базовые навыки и понятия программирования все равно понадобятся. Например, понятия процедуры или рекурсивного использования процедур. Но это уже каждый ученик 10-го класса знает! Так что программистов будет требоваться гораздо меньше для предприятия, которое использует Систему.</P>
<LI>Как интеллектуальный машинный консультант.</LI>
<P>Если в Систему ввести достаточное количество знаний по заданной теме, то она может выступать как человек-консультант достаточно высокой квалификации. Любое предприятие может экономить на зарплате. А использование такого компьютерного консультанта через интернет с оплатой консультаций может привести к значительным прибылям для интернет-компании.</P></DIR>

<P>На этом возможности не исчерпываются…</P>
</FONT>
<FONT FACE="Times New Roman"><P>&#9;Автор Ермолаев Дмитрий Сергеевич </FONT></P>
<A HREF="HTTP://icreator.ru/isearch/index.htm"><U><FONT FACE="Times New Roman" COLOR="#0000ff">назад в раздел</U></FONT></A>
<P><A HREF="HTTP://www.icreator.ru/index.htm"><U><FONT FACE="Times New Roman" COLOR="#0000ff">на главную страницу</U></FONT></A> </P>
<P><!--Rating@Mail.ru COUNTER--><script language="JavaScript"><!--
d=document;a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3"><!--
js=13//--></script><script language="JavaScript"><!--
d.write('<a href="http://top.mail.ru/jump?from=269943"'+
' target=_top><img src="http://top.list.ru/counter'+
'?id=269943;t=201;js='+js+a+';rand='+Math.random()+
'" alt="Рейтинг@Mail.ru"'+' border=0 height=31 width=38></a>')
if(js>11)d.write('<'+'!-- ')//--></script><noscript><A HREF="http://top.mail.ru/jump?from=269943"><IMG SRC="http://top.list.ru/counter?js=na;id=269943;t=201" BORDER=0 WIDTH=38 HEIGHT=31 ALT="Рейтинг@Mail.ru"></A></noscript><script language="JavaScript"><!--
if(js>11)d.write('--'+'>')//--></script><!--/COUNTER--><!--begin of Top100--><A HREF="http://top100.rambler.ru/top100/"><IMG SRC="http://counter.rambler.ru/top100.cnt?290358" BORDER=0 WIDTH=1 HEIGHT=1 ALT="Rambler's Top100"></A><!--end of Top100 code-->
<!-- HotLog -->
<script language="javascript">
hotlog_js="1.0";hotlog_d=document; hotlog_n=navigator;hotlog_rn=Math.random();
hotlog_n_n=(hotlog_n.appName.substring(0,3)=="Mic")?0:1;
hotlog_r=""+hotlog_rn+"&s=25682&im=26&r="+escape(hotlog_d.referrer)+"&pg="+
escape(window.location.href);
hotlog_d.cookie="hotlog=1"; hotlog_r+="&c="+(hotlog_d.cookie?"Y":"N");
hotlog_d.cookie="hotlog=1; expires=Thu, 01-Jan-70 00:00:01 GMT"</script>
<script language="javascript1.1">
hotlog_js="1.1";hotlog_r+="&j="+(navigator.javaEnabled()?"Y":"N")</script>
<script language="javascript1.2">
hotlog_js="1.2";hotlog_s=screen;
hotlog_r+="&wh="+hotlog_s.width+'x'+hotlog_s.height+"&px="+((hotlog_n_n==0)?
hotlog_s.colorDepth:hotlog_s.pixelDepth)</script>
<script language="javascript1.3">hotlog_js="1.3"</script>
<script language="javascript">hotlog_r+="&js="+hotlog_js;
hotlog_d.write("<a href=http://click.hotlog.ru/?25682 target=_top><img "+
"src=\"http://hit2.hotlog.ru/cgi-bin/hotlog/count?"+
hotlog_r+"&\" border=0 width=88 height=31 alt=HotLog></a>")</script>
<noscript><a href=http://click.hotlog.ru/?25682 target=_top><img
src="http://hit2.hotlog.ru/cgi-bin/hotlog/count?s=25682&im=26" border=0 
width="88" height="31" alt="HotLog"></a></noscript>
<!-- /HotLog -->
<!--begin of Top100 logo-->
<a href="http://top100.rambler.ru/top100/"><img src="http://top100-images.rambler.ru/top100/banner-88x31-rambler-green2.gif" alt="Rambler's Top100" width=88 height=31 border=0></a>
<!--end of Top100 logo -->
</BODY>
</HTML>
