<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Термины</TITLE>
</HEAD>
<BODY>

<FONT FACE="Times New Roman" SIZE=2><P>Термины. </P>
<P>ЕЯ текст – текст на естественном языке.</P>
<P>Суть слова – простая форма слова, имеющая некоторый набор свойств, описывающих это слово.</P>
<P>Семантическая сеть – набор связей между сутями.</P>
<P>Связывание слова – подчинение данного слова связью к семантической сети.</P>
<P>Качество связывания слов – отношение числа связанных слов к общему числу слов предложения или текста.</P>
<P>Понимание текста  - связывание слов.</P>
<P>Анализатор текста – программа, которая из ЕЯ текста создает семантические сети.</P>
<P>Смыслосеть – семантическая сеть.</P>
<P>База знаний – хранилище семантических сетей.</P>
</FONT><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>2000г: </P>
<OL>

<LI>Создана первая версия анализатора русского текста. Скорость работы: порядка нескольких секунд на предложение. Алгоритм – простой перебор всех возможных вариантов связывания слов. Качество связывания около 60%. Процент ошибок ниже 10% от числа созданных связей. Связывала в том числе и местоимения внутри и между предложениями. Недостатки:</LI></OL>


<UL>
<LI>скорость разбора текста зависела от количества слов в одном предложении как 2..3 в </FONT><FONT SIZE=2>k</FONT><FONT FACE="Times New Roman" SIZE=2>-степени, </FONT><FONT SIZE=2>k – </FONT><FONT FACE="Times New Roman" SIZE=2>количество слов в предложении. То есть предложение из 3-х слов разбиралось за миллисекунды, а из 10слов уже за десятки секунд.</LI>
<LI>если невозможно связать все слова в предложении (например одно слово не описано), то перебор вариантов начинал длиться минуты прежде чем выдавал отрицательный ответ.</LI>
<LI>Если нет успешного (полного) варианта связывания для предложения, то предлагался целый список вариантов связывания, возможный для дальнейшей обработки с использованием смыслов, уже известных Системе. Но эта возможность не была реализована.</LI></UL>

<OL>

<LI>создан поисковый движок, который может искать среди семантических сетей заданную семантическую сеть.</LI>
<LI>создан внутренний упрощенный язык для работы с базой знаний. Этот язык является независимым от конкретного человеческого языка.</LI>
<LI>создано ядро обработки упрощенного языка, выполняющее команду поиска в базе знаний запросов на упрощенном языке минуя анализатор ЕЯ. Так что можно заниматься разработкой поискового движка вне зависимости от качества анализатора ЕЯ текстов. В принципе это ядро вмонтировано в поисковый движок.</LI></OL>

</FONT><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>2001г: </P>
<OL>

<LI>Создан более быстрый анализатор. Скорость связывания 10слов в секунду даже для длинных предложений из 10-12слов. Качество связывания 50%. Недостатки: при невозможности полного связывания всех слов в предложении перебор вариантов начинал длиться секунды и более.</LI>
<LI>Создан поисковый движок, который может выполнять в том числе и команды, управляющие базой знаний: удалить, добавить смыслосеть или часть её.</LI></OL>

</FONT><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>2002г:</P>
<OL>

<LI>Создан анализатор более быстрый (20-30сл/с). Недостатки те же. Качество связывания 55%. Процент ошибок ниже 5% от числа созданных связей (сказывается накопление опыта по русскому языку).</LI>
<LI>Поисковый движок теперь может обрабатывать команды с участием переменных. Пример: делаем запрос с найти “_Х продаёт масло”, после выполнения запроса переменная _Х имеет значения со ссылками на разные смыслосети, которые были найдены. Теперь запрос “участник автомобильной выставки _Х” – будут найдены смыслосети, где участвуют значения из переменной _Х.</LI>
<LI>Поисковый движок может обрабатывать логику НЕ, ИЛИ, И.</LI>
<LI>Поисковый движок может обрабатывать функции. </LI>
<LI>Создан механизм, позволяющий использовать правила-знания при поиске смыслосети. Ввод правил-знаний реализован пока только на внутреннем упрощенном языке. Введенные правила-знания позволяют эмулировать процесс мышления. Недостатки – не реализована возможность самостоятельного обучения Системы, каждое правило-знание нужно вводить вручную. Так же пока представляет сложность обучить Систему путем ввода ЕЯ текстов из толковых словарей или энциклопедий. Пример правила-знания: “тигр это хищник”, “хищник охотится на животных”. Если теперь дать Системе запрос “тигр охотится на животных” Система ответит “ДА” и выдаст найденные смыслосети.</LI></OL>

</FONT><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>2003г:</P>
<OL>

<LI>создан анализатор текста, который освободился от главного недостатка предыдущих анализаторов: теперь не обязательно все слова в предложении должны быть связаны и описаны. То есть скорость разбора не зависит от числа возможных связей в предложении. Резко увеличилась скорость связывания – от 1000слов в секунду до 3000слов/сек. Недостатки: качество связывания упало до 45%. Формула расчета: (ЧислоСвязанных + ЧилоНеизвестных)/СловВсего. Процент ошибок вырос примерно до 15% от числа созданных связей. Этот движок был написан под задачу поисковой машины в интернете, где основным условием было увеличение скорости разбора. Но по моим оценкам качество связывания этого анализатора можно поднять и до 60% без особых затрат. Чем я руководствуюсь говоря так:</LI>
<OL>

<LI>в текущей версии быстрого анализатора нет обработки связей деепричастий (они могут обрабатываются по типу как и причастия, которые у меня в основном реализованы, так что это не составит труда реализовать), нет обработки местоимений внутри предложения (так как местоимения были у меня реализованы в предыдущих версиях, то они легко реализуемы по</FONT><FONT SIZE=2> </FONT><FONT FACE="Times New Roman" SIZE=2>прототипу и я их пока не делал, а это еще 100% от их числа), нет подчинения 80% предлогов (сейчас частично предлоги связываются с причастиями и глаголами).</LI>
<LI>Я беру любой текст и пропускаю через анализатор, получаю статистику по предлогам, деепричастиям (местоимения пока опускаю). Делаю пересчет для будущей версии анализатора, в котором это все будет реализовано по формуле: ЧислоСвязанныхБудет = ЧислоСвязанных_Сейсас + 0.8*Число_Предлогов + 0,2*Число_Деепричастий + ЧислоСловНеизвестных. Тут нужно заметить, что неизвестное слово на самом деле иногда рвет две связи, а значит на каждое неизвестное слово теряется примерно 1.5 связей. Полученное число делю на ВсегоСловТекста и получаю процент связывания до 70%. Это очень даже не плохо для интернет-поисковой машины</FONT><FONT SIZE=2>. </LI>
</FONT><FONT FACE="Times New Roman" SIZE=2><LI>Нужно еще учесть что числа в ЕЯ тексте считаются как СловВсего, но не обрабатываются анализатором.</LI></OL>
</OL>

</FONT><FONT SIZE=2>
</FONT><FONT FACE="Times New Roman" SIZE=2><P>2004г:</P>
</FONT><FONT SIZE=2><P>..</P></FONT>
<A HREF="HTTP://icreator.ru/isearch/index.htm"><U><FONT FACE="Times New Roman" COLOR="#0000ff">назад в раздел</U></FONT></A>
<P><A HREF="HTTP://www.icreator.ru/index.htm"><U><FONT FACE="Times New Roman" COLOR="#0000ff">на главную страницу</U></FONT></A> </P>
</BODY>
</HTML>
